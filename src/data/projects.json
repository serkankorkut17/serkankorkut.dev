{
	"title": ".: TAKE A LOOK",
	"subtitle": "My Projects",
	"projects": [
		{
			"id": 1,
			"title": "Flexible Backend with FastAPI and GraphQL",
			"description": "This project provides a modular backend using FastAPI and GraphQL, incorporating essential features like user authentication, role-based access control, and social media-like interactions with posts and comments. It uses SQLAlchemy for database management and JWT for secure authentication, making it a robust solution for handling user data and permissions. Although still in development, the project aims to strike a balance between flexibility and adherence to best practices, highlighting foundational concepts in backend and GraphQL API design.",
			"githubUrl": "https://github.com/serkankorkut17/python-fastpi-graphql",
			"images": [
				"/projects/fastapi-graphql/fastapi-docs.webp",
				"/projects/fastapi-graphql/fastapi-graphql.webp",
				"/projects/fastapi-graphql/graphql-mutations.webp"
			]
		},
		{
			"id": 2,
			"title": "Node.js MVC Backend with MongoDB",
			"description": "This project implements a full-stack application using Node.js with an MVC architecture. It features Express.js for the backend, MongoDB for data storage, and EJS templates for rendering dynamic views. The application includes user authentication and session management using MongoDB and express-session, and allows for image uploads with Multer. The frontend supports a dark mode toggle using cookies.",
			"githubUrl": "https://github.com/serkankorkut17/Learning-Node.js",
			"images": [
				"/projects/nodejs-backend/nodejs-home.webp",
				"/projects/nodejs-backend/nodejs-home-2.webp",
				"/projects/nodejs-backend/nodejs-home-3.webp",
				"/projects/nodejs-backend/nodejs-home-4.webp",
				"/projects/nodejs-backend/nodejs-light.webp",
				"/projects/nodejs-backend/nodejs-post.webp",
				"/projects/nodejs-backend/nodejs-profile.webp",
				"/projects/nodejs-backend/nodejs-saved.webp",
				"/projects/nodejs-backend/nodejs-users.webp",
				"/projects/nodejs-backend/nodejs-signup.webp",
				"/projects/nodejs-backend/nodejs-signup-2.webp",
				"/projects/nodejs-backend/nodejs-signup-3.webp",
				"/projects/nodejs-backend/nodejs-login.webp",
				"/projects/nodejs-backend/nodejs-login-2.webp"
			]
		},
		{
			"id": 3,
			"title": "Leave Master - ASP.NET Core Backend",
			"description": "This project implements a backend for managing employee leave requests using ASP.NET Core and MongoDB. It includes robust user authentication with JWT, leveraging MongoDB for data persistence, and integrates Identity for flexible identity management. Features include role-based access control, a custom email service, and configuration via dependency injection. Swagger is enabled for API documentation, providing a streamlined interface for testing endpoints. This setup provides a solid foundation for an enterprise-grade leave management system that supports secure, scalable, and multi-tenant-ready operations.",
			"githubUrl": "https://github.com/serkankorkut17/leave-master-backend",
			"images": [
				"/projects/leave-master-backend/leave-master-swagger-1.webp",
				"/projects/leave-master-backend/leave-master-swagger-2.webp",
				"/projects/leave-master-backend/leave-master-swagger-3.webp",
				"/projects/leave-master-backend/leave-master-swagger-4.webp",
				"/projects/leave-master-backend/leave-master-code.webp"
			]
		},
		{
			"id": 4,
			"title": "Leave Master - Frontend Application",
			"description": "This React-based frontend application serves as the user interface for the Leave Master system, a tool designed for managing employee leave requests within an organization. Built with React Router for seamless navigation, it provides users with pages for signing up, logging in, submitting leave requests, viewing leave calendars, and managing new employees. Key routes include password reset, leave request forms, and calendar views to facilitate efficient leave tracking.",
			"githubUrl": "https://github.com/serkankorkut17/leave-master-frontend",
			"images": [
				"/projects/leave-master-frontend/leave-master-login.webp",
				"/projects/leave-master-frontend/leave-master-calendar-dark.webp",
				"/projects/leave-master-frontend/leave-master-calendar-light.webp",
				"/projects/leave-master-frontend/leave-master-employee.webp",
				"/projects/leave-master-frontend/leave-master-request.webp",
				"/projects/leave-master-frontend/leave-master-admin.webp",
				"/projects/leave-master-frontend/leave-master-employee-signup.webp"
			]
		},
		{
			"id": 5,
			"title": "Invoice Payment Web Application",
			"description": "This frontend-only application is designed specifically for managing invoice payment functionality within a banking context. It provides users with an intuitive interface for creating, tracking, and processing invoices efficiently. By leveraging Next.js, the application ensures fast performance and seamless navigation, enhancing user experience. Users can view detailed invoice information, manage payment statuses, and access historical data, streamlining the entire invoicing process for banking operations.",
			"githubUrl": "https://github.com/serkankorkut17/invoice-payment",
			"images": [
				"/projects/invoice-payment/invoice-payment-1.webp",
				"/projects/invoice-payment/invoice-payment-2.webp",
				"/projects/invoice-payment/invoice-payment-3.webp",
				"/projects/invoice-payment/invoice-payment-4.webp"
			]
		},
		{
			"id": 6,
			"title": "Affine vs Perspective-Correct Texture Mapping with SDL and GLM",
			"description": "This project demonstrates the differences between affine and perspective-correct texture mapping using SDL and GLM. The implementation uses Barycentric coordinates to map texture coordinates across triangles. With user controls to switch between affine and perspective-correct mappings, it provides a visual comparison by rendering a rotating textured quad on the screen. The project uses SDL for window management and OpenGLâ€™s glm library for matrix transformations, creating an interactive experience that highlights the significance of perspective correction in 3D graphics.",
			"githubUrl": "https://github.com/serkankorkut17/texture-mapping-comparison",
			"images": [
				"/projects/texture-mapping/texture-affine.webp",
				"/projects/texture-mapping/texture-perspective-correct.webp"
			]
		},
		{
			"id": 7,
			"title": "IoT Gateway for Environmental Monitoring",
			"description": "This project implements an IoT gateway that monitors environmental conditions using temperature and humidity sensors. Utilizing socket programming, the gateway communicates with sensors via TCP and UDP sockets, sending data to a central server. The server processes this data and offers an HTTP interface for users to view real-time readings. The project showcases real-time data transmission and management in IoT systems, highlighting the use of socket communication in a multi-threaded environment.",
			"githubUrl": "https://github.com/serkankorkut17/Marmara-University-CSE/tree/main/CSE4074-Computer-Networks",
			"images": [
				"/projects/socket-programming/socket-usage.webp",
				"/projects/socket-programming/socket-usage-2.webp",
				"/projects/socket-programming/socket-humidity.webp",
				"/projects/socket-programming/socket-temperature.webp"
			]
		},
		{
			"id": 8,
			"title": "Inventory Management System - SQL Database Project",
			"description": "This SQL-based Inventory Management System is designed for structured data handling of employees, products, factories, suppliers, and customer orders. The database schema features comprehensive tables, such as EMPLOYEE for employee data with derived age calculations, UPS_PRODUCT for uninterruptible power supply (UPS) items, and specific entities for customer and supplier details. Additionally, it supports product stock tracking per factory location, customer orders, and records for supplied inventory items. The system uses views, stored procedures, and triggers to streamline inventory operations, ensuring data consistency and supporting automated stock updates. This SQL solution provides a scalable foundation for efficient inventory management across diverse organizational functions.",
			"githubUrl": "https://github.com/serkankorkut17/Marmara-University-CSE/tree/main/CSE3055-Database-Systems",
			"images": [
				"/projects/mssql-database/database-diagram.webp",
				"/projects/mssql-database/database-procedure.webp",
				"/projects/mssql-database/database-trigger.webp",
				"/projects/mssql-database/database-view.webp"
			]
		},
		{
			"id": 9,
			"title": "Robotic Arm Path Tracking and Control",
			"description": "This project simulates a robotic arm in a 3D environment, with real-time control and trajectory tracking. Using Python and a 3D simulation library, it demonstrates concepts such as forward kinematics, inverse kinematics, Jacobian matrices, and interactive control. The primary goal is to allow the arm to follow a pre-defined path while calculating necessary joint angles and adjusting position and orientation based on user input.",
			"githubUrl": "https://github.com/serkankorkut17/Robotics-HW",
			"images": [
				"/projects/robotics/robotics-draw-1.webp",
				"/projects/robotics/robotics-draw-2.webp",
				"/projects/robotics/robotics-draw-3.webp",
				"/projects/robotics/robotics-code.webp"
			]
		},
		{
			"id": 10,
			"title": "Student Registration System",
			"description": "The Student Registration System is a robust, object-oriented application built in both Java and Python, primarily focused on managing the registration and academic records for students within an educational institution. This system efficiently handles student, course, and advisor data while managing diverse course types and graduation requirements. It is designed for modularity and scalability, supporting various academic processes through its distinct class structures and data-driven approach.",
			"githubUrl": "https://github.com/serkankorkut17/Marmara-University-CSE/tree/main/CSE3063-Object-Oriented-Software-Design",
			"images": [
				"/projects/student-registration/student-ver-java.webp",
				"/projects/student-registration/student-ver-python.webp",
				"/projects/student-registration/student-json.webp",
				"/projects/student-registration/student-json-2.webp",
				"/projects/student-registration/student-json-3.webp"
			]
		}
	]
}
